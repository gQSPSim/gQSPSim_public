classdef gQSPSimTester < QSPViewer.App
    methods
        function obj = gQSPSimTester(filename)
            if nargin == 0
                rootDirectory = "/Users/pax/work/gQSPsim/Sessions/CaseStudy_aPCSK9/aPCSK9_v7_MES_complete/";
                filename = rootDirectory + "CaseStudy2_aPCSK9.qsp.mat";
                
                %rootDirectory = "/Users/pax/work/gQSPsim/Sessions/CaseStudy_TMDD/";
                %filename = rootDirectory + "CaseStudy_TMDD_complete/CaseStudy1_TMDD.qsp.mat";
            else
                rootDirectory = fileparts(filename);
            end
            
            a = obj.loadSessionFromFile(filename, false);            
            obj.Session.RootDirectory = char(rootDirectory);
            obj.Session.UseParallel = false;
        end
        
        function runSimulations(obj)
            for i = 1:numel(obj.Session.Simulation)
                simResultsFolder = obj.Session.Simulation(i).SimResultsFolderName;
                obj.Session.Simulation(i).SimResultsFolderName = 'tmp';
                
                [a, e] = obj.Session.Simulation(i).run;
                
                % This assumes an empty "current" directory for output. So
                % any new files found here are those generated by the
                % Simulation and are used for comparison. If there is a
                % failure the actual files that fail are copied into a
                % failed directory in order to facilitate debugging.
                p = string(obj.Session.RootDirectory) + "/tmp";
                d = dir(p);
                actualName = [d(end).folder, '/', d(end).name];
                
                actual = load(actualName);
                                
            end
        end
        
        function runOptimizations(obj)
            for i = 1:numel(obj.Session.Optimization)
                [a, e] = obj.Session.Optimization(i);
            end
        end
    end
end